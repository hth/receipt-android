import groovy.xml.Namespace

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}

if (!hasProperty('env')) {
    env = System.env['GRADLE_ENV']
}

def buildNumber = System.getenv("BUILD_NUMBER") ?: "0"
if (env == 'debug' || env == 'release' || env == 'staging') {
    apkName = "-" + buildNumber + ".apk"
}

def manifestVersionName() {
    def manifestFile = file(project.projectDir.absolutePath + '/src/main/AndroidManifest.xml')
    def ns = new Namespace("http://schemas.android.com/apk/res/android", "android")
    def xml = new XmlParser().parse(manifestFile)
    return xml.attributes()[ns.versionName].toString()
}

ext.versionName = manifestVersionName()
println "Building Receiptofi Checkout for " +
        "environment: $env " +
        "app-version: $versionName " +
        "apkName ends with : $apkName"

apply plugin: 'com.android.application'
apply plugin: 'eclipse'
apply plugin: 'idea'

apply from: 'config/quality.gradle'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "http://repo1.maven.org/maven2/" }
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    /** Menu. */
    compile project(':fatlibs:library_ldrawer')
    /** Expense Tag Swipe. */
    compile project(':fatlibs:library_swipt')
    /** Pretty messages. */
    compile 'com.r0adkll:postoffice:1.1.9'
    /** Android library for material design. */
    compile 'com.github.navasmdc:MaterialDesign:1.3'
    /** Pull refresh. */
    compile 'in.srain.cube:ultra-ptr:1.0.10'
    /** Material Navigation Drawer */
    compile 'it.neokree:MaterialNavigationDrawer:1.3.3'
    /** Super toast */
    compile 'com.github.johnpersano:supertoasts:1.3.4@aar'
    /** Image download. */
    compile 'com.squareup.picasso:picasso:2.5.2'
    /** Icons. */
    compile 'com.joanzapata.android:android-iconify:1.0.9'

    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.github.PhilJay:MPAndroidChart:v2.1.0'
    compile 'com.github.machinarius:preferencefragment:0.1.1'
    compile 'net.danlew:android.joda:2.7.2'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.0.Final'
    compile 'com.braintreepayments.api:braintree:1.5.1'
    compile('org.apache.httpcomponents:httpmime:4.3.5') {
        exclude module: 'httpclient'
    }
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    compile 'com.google.android.gms:play-services:7.3.0'
    compile 'com.facebook.android:facebook-android-sdk:3.23.1'
    androidTestCompile 'junit:junit:4.10'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

//http://stackoverflow.com/questions/3993924/get-android-api-level-of-phone-currently-running-my-application
//http://en.wikipedia.org/wiki/Android_version_history
//Global Android version distribution since December 2009. As of May 2015, Android 4.4 "KitKat" is the
//single most widely used Android version, operating on 39.8% of all Android devices accessing Google Play.
//        The second are different Android "Jelly Bean" versions (4.1â€“4.3.1), with a combined share of 39.2%.[1]

android {
    archivesBaseName = "checkout";

    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.receiptofi.checkout"
        minSdkVersion 16
        targetSdkVersion 22
        testHandleProfiling true
        testFunctionalTest true
        versionCode 0
        versionName "0.8.1"

        // For now we enable strict mode for all the configs
        buildConfigField 'boolean', 'STRICT_MODE', 'true'
        buildConfigField "String", "BUILD", "\"$buildNumber\""

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                output.outputFile = new File(
                        output.outputFile.parent,
                        output.outputFile.name.replace(".apk", "$apkName")
                )
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    signingConfigs {
        staging
        release
    }
    apply from: 'checkout-additional-files/signing.gradle'

    buildTypes {
        def BOOLEAN = "boolean"
        def STRING = "String"
        def TRUE = "true"
        def FALSE = "false"
        def LOG_HTTP_REQUESTS = "LOG_HTTP_REQUESTS"
        def REPORT_CRASHES = "REPORT_CRASHES"
        def ENABLE_VIEW_SERVER = "ENABLE_VIEW_SERVER"
        def ENABLE_SHARING = "ENABLE_SHARING"
        def DEBUG_IMAGES = "DEBUG_IMAGES"

        debug {
            debuggable true
            minifyEnabled true

            proguardFile 'library-proguard/proguard-crashlytics.pro'
            proguardFile 'library-proguard/proguard-facebook.pro'
            proguardFile 'library-proguard/proguard-facebook-conceal.pro'
            proguardFile 'library-proguard/proguard-google-analytics.pro'
            proguardFile 'library-proguard/proguard-google-play-services.pro'
            proguardFile 'library-proguard/proguard-gson.pro'
            proguardFile 'library-proguard/proguard-mikephil-charting.pro'
            proguardFile 'library-proguard/proguard-org-apache.pro'

            proguardFile 'receiptofi-debug-proguard.config'
            proguardFile getDefaultProguardFile('proguard-android.txt')

            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, TRUE
            buildConfigField BOOLEAN, REPORT_CRASHES, FALSE
            buildConfigField BOOLEAN, ENABLE_VIEW_SERVER, TRUE
            buildConfigField BOOLEAN, ENABLE_SHARING, TRUE
            buildConfigField BOOLEAN, DEBUG_IMAGES, TRUE

            buildConfigField STRING, "PROVIDER_AUTHORITY", debugProviderAuthority
            buildConfigField STRING, "RECEIPTOFI_MOBILE", debugEndpoint
            buildConfigField STRING, "GOOGLE_CLIENT_ID", googleClientIdLocal
            buildConfigField STRING, "AWSS3", debugEndpointAwsS3
        }

        staging {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true

            proguardFile 'library-proguard/proguard-crashlytics.pro'
            proguardFile 'library-proguard/proguard-facebook.pro'
            proguardFile 'library-proguard/proguard-facebook-conceal.pro'
            proguardFile 'library-proguard/proguard-google-analytics.pro'
            proguardFile 'library-proguard/proguard-google-play-services.pro'
            proguardFile 'library-proguard/proguard-gson.pro'
            proguardFile 'library-proguard/proguard-mikephil-charting.pro'
            proguardFile 'library-proguard/proguard-org-apache.pro'

            proguardFile 'receiptofi-staging-proguard.config'
            proguardFile getDefaultProguardFile('proguard-android.txt')

            signingConfig signingConfigs.staging

            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, TRUE
            buildConfigField BOOLEAN, REPORT_CRASHES, TRUE
            buildConfigField BOOLEAN, ENABLE_VIEW_SERVER, FALSE
            buildConfigField BOOLEAN, ENABLE_SHARING, FALSE
            buildConfigField BOOLEAN, DEBUG_IMAGES, FALSE

            buildConfigField STRING, "PROVIDER_AUTHORITY", stagingProviderAuthority
            buildConfigField STRING, "RECEIPTOFI_MOBILE", stagingEndpoint
            buildConfigField STRING, "GOOGLE_CLIENT_ID", googleClientIdStaging
            buildConfigField STRING, "AWSS3", debugEndpointAwsS3
        }

        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true

            proguardFile 'library-proguard/proguard-crashlytics.pro'
            proguardFile 'library-proguard/proguard-facebook.pro'
            proguardFile 'library-proguard/proguard-facebook-conceal.pro'
            proguardFile 'library-proguard/proguard-google-analytics.pro'
            proguardFile 'library-proguard/proguard-google-play-services.pro'
            proguardFile 'library-proguard/proguard-gson.pro'
            proguardFile 'library-proguard/proguard-mikephil-charting.pro'
            proguardFile 'library-proguard/proguard-org-apache.pro'

            proguardFile 'receiptofi-release-proguard.config'
            proguardFile getDefaultProguardFile('proguard-android.txt')

            signingConfig signingConfigs.release

            buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, FALSE
            buildConfigField BOOLEAN, REPORT_CRASHES, TRUE
            buildConfigField BOOLEAN, ENABLE_VIEW_SERVER, FALSE
            buildConfigField BOOLEAN, ENABLE_SHARING, FALSE
            buildConfigField BOOLEAN, DEBUG_IMAGES, FALSE

            buildConfigField STRING, "PROVIDER_AUTHORITY", releaseProviderAuthority
            buildConfigField STRING, "RECEIPTOFI_MOBILE", releaseEndpoint
            buildConfigField STRING, "GOOGLE_CLIENT_ID", googleClientIdLive
            buildConfigField STRING, "AWSS3", releaseEndpointAwsS3
        }
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
        // if true, emit full/absolute paths to files with errors (true by default)
        //absolutePaths true
        // if true, check all issues, including those that are off by default
        checkAllWarnings true
        // if true, treat all warnings as errors
        warningsAsErrors true
        // turn off checking the given issue id's
        disable 'TypographyFractions','TypographyQuotes'
        // turn on the given issue id's
        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // check *only* the given issue id's
        check 'NewApi', 'InlinedApi'
        // if true, don't include source code lines in the error output
        noLines true
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
        // Fallback lint configuration (default severities, etc.)
        lintConfig file("default-lint.xml")
        // if true, generate a text report of issues (false by default)
        textReport true
        // location to write the output; can be a file or 'stdout'
        textOutput 'stdout'
        // if true, generate an XML report for use by for example Jenkins
        xmlReport false
        // file to write report to (if not specified, defaults to lint-results.xml)
        xmlOutput file("lint-report.xml")
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("lint-report.html")

        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
        // Set the severity of the given issues to fatal (which means they will be
        // checked during release builds (even if the lint target is not included)
        fatal 'NewApi', 'InlineApi'
        // Set the severity of the given issues to error
        error 'Wakelock', 'TextViewEdits'
        // Set the severity of the given issues to warning
        warning 'ResourceAsColor'
        // Set the severity of the given issues to ignore (same as disabling the check)
        ignore 'TypographyQuotes'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

defaultTasks 'clean', 'assembleDebug'